<%= render partial: 'shared/header', locals: { title: @flashcard.stack_title, color: 'orange' } %>
<div class='card-wrapper'>
  <div class='card-inner'>
    <div class='card card-front orange question' id='front'>
      <div>
        <div class='type-wrapper'>
          <div class='left'></div>
          <p class='type' data-type='<%= @flashcard.type %>'><%= @flashcard.type_string %></p>
          <div class='right'></div>
        </div>
        <h3 id='question' contenteditable='true' data-stack-id='<%= @flashcard.stack.id %>' data-flashcard-id='<%= @flashcard.id %>'><%= @flashcard.question %></h3>
      </div>
      <div class='action-buttons'>
        <button class='button circle white' onclick="showAnswerSide()">
          <%= render partial: 'shared/icons/turn' %>
        </button>
      </div>
    </div>

    <div class='card card-front orange invisible' id='notes'>
      <div>
        <h3>Notizen</h3>
        <p id='notes-text' contenteditable='true'><%= @flashcard.notes %></p>
      </div>
      <button class='button circle white' onclick="flipCard()">
        <%= render partial: 'shared/icons/back' %>
      </button>
    </div>

    <div class='card card-back orange answer' id='back'>
      <div>
        <p class='question'>Frage</p>
        <% case @flashcard.type %>
          <% when 'OpenAnswer' %>
            <div class='answers open-answer' id='OpenAnswer'><h3 id='answer' contenteditable='true'><%= @flashcard.answer %></h3></div>

          <% when 'MultipleChoice' %>
            <div class='answers multiple-choice' id='MultipleChoice'>
              <div class='horizontal-input'>
                <input type='checkbox' id='mc-option1-correct' name='option1' value='1' <%= 'checked' if @flashcard.option1_correct %>>
                <label contenteditable='true' id='mc-option1' class='bold'><%= @flashcard.option1 %></label>
              </div>
              <div class='horizontal-input'>
                <input type='checkbox' id='mc-option2-correct' name='option2' value='2' <%= 'checked' if @flashcard.option2_correct %>>
                <label contenteditable='true' id='mc-option2' class='bold'><%= @flashcard.option2 %></label>
              </div>
              <div class='horizontal-input'>
                <input type='checkbox' id='mc-option3-correct' name='option3' value='3' <%= 'checked' if @flashcard.option3_correct %>>
                <label contenteditable='true' id='mc-option3' class='bold'><%= @flashcard.option3 %></label>
              </div>
              <div class='horizontal-input'>
                <input type='checkbox' id='mc-option4-correct' name='option4' value='4' <%= 'checked' if @flashcard.option4_correct %>>
                <label contenteditable='true' id='mc-option4' class='bold'><%= @flashcard.option4 %></label>
              </div>
            </div>

          <% when 'SingleChoice' %>
            <div class='answers single-choice' id='SingleChoice'>
              <div class='horizontal-input'>
                <input type='radio' id='option1' name='sc-correct' value='1' <%= 'checked' if @flashcard.correct_option == 1 %>>
                <label contenteditable='true' id='sc-option1' class='bold'><%= @flashcard.option4 %></label>
              </div>
              <div class='horizontal-input'>
                <input type='radio' id='option2' name='sc-correct' value='2' <%= 'checked' if @flashcard.correct_option == 2 %>>
                <label contenteditable='true' id='sc-option2' class='bold'><%= @flashcard.option2 %></label>
              </div>
              <div class='horizontal-input'>
                <input type='radio' id='option3' name='sc-correct' value='3' <%= 'checked' if @flashcard.correct_option == 3 %>>
                <label contenteditable='true' id='sc-option3' class='bold'><%= @flashcard.option3 %></label>
              </div>
              <div class='horizontal-input'>
                <input type='radio' id='option4' name='sc-correct' value='4' <%= 'checked' if @flashcard.correct_option == 4 %>>
                <label contenteditable='true' id='sc-option4' class='bold'><%= @flashcard.option4 %></label>
              </div>
            </div>

          <% when 'TrueFalse' %>
            <div class='answers true-false' id='TrueFalse'>
              <div class='horizontal-input'>
                <input type='radio' id='true' name='true-false' value='true' <%= 'checked' if @flashcard.correct == true %>>
                <label for='true' class='bold'>Wahr</label>
              </div>
              <div class='horizontal-input'>
                <input type='radio' id='false' name='true-false' value='false' <%= 'checked' if @flashcard.correct == false %>>
                <label for='false' class='bold'>Falsch</label>
              </div>
            </div>
          <% else %>
        <% end %>
      </div>
      <div class='action-buttons'>
        <button class='button circle white' onclick='showNotes()' >
          <%= image_pack_tag 'bulb.png' %>
        </button>
        <button onclick="updateFlashcard()" class='button circle white'>
          <%= render partial: 'shared/icons/check' %>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  function updateFlashcard() {
    const data = getFlashcardData();
    const question = document.getElementById('question');
    const stackId = question.dataset.stackId;
    const id = question.dataset.flashcardId;

    fetch(`/stacks/${stackId}/flashcards/${id}`, {
      method: 'PATCH',
      body: JSON.stringify({ flashcard: data }),
      headers: new Headers({
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
      })
    })
    .then((res) => res.text())
    .then((path) => {
      window.location.replace(path)
    })
  }

  function getFlashcardData() {
    const type = document.querySelector('.type').dataset.type;
    let answer = {};

    switch (type) {
      case 'OpenAnswer':
        answer = { answer: document.getElementById('answer').textContent };
        break;
      case 'MultipleChoice':
        answer = {
          option1: document.getElementById('mc-option1').textContent,
          option2: document.getElementById('mc-option2').textContent,
          option3: document.getElementById('mc-option3').textContent,
          option4: document.getElementById('mc-option4').textContent,
          option1_correct: document.getElementById('mc-option1-correct').checked,
          option2_correct: document.getElementById('mc-option2-correct').checked,
          option3_correct: document.getElementById('mc-option3-correct').checked,
          option4_correct: document.getElementById('mc-option4-correct').checked,
        }
        break;
      case 'SingleChoice':
        answer = {
          option1: document.getElementById('sc-option1').textContent,
          option2: document.getElementById('sc-option2').textContent,
          option3: document.getElementById('sc-option3').textContent,
          option4: document.getElementById('sc-option4').textContent,
          correct_option: parseInt(document.querySelector('input[name="sc-correct"]:checked').value),
        }
        break;
      case 'TrueFalse':
        answer = {
          correct: document.querySelector('input[name="true-false"]:checked').value === 'true',
        }
        break;
      default:
        break;
    }

    const questionText = question.textContent;
    const notes = document.getElementById('notes-text').textContent;

    return {
      question: questionText,
      notes: notes,
      type: type,
      ...answer
    }
  }

  function showAnswerSide() {
    const questionText = document.getElementById('question').textContent;
    const backsideQuestion = document.querySelector('p.question');
    backsideQuestion.textContent = questionText;
    flipCard();
  }

  function showNotes() {
    document.querySelector('.card-front.question').classList.add('invisible');
    document.getElementById('notes').classList.remove('invisible');
    flipCard();
  }

  function flipCard() {
    document.querySelector('.card-wrapper').classList.toggle('flipped');
  }
</script>
