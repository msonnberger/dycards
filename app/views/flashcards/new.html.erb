<%= render partial: 'shared/header', locals: { title: @stack.title, color: 'orange' } %>
<%= render 'shared/errors' %>
<div class='card-wrapper'>
  <div class='card-inner'>
    <div class='card card-front orange question'>
      <div>
        <div class='type-wrapper'>
          <div class='left'></div>
          <select id='type-select'>
            <option value='OpenAnswer'>Offene Frage</option>
            <option value='MultipleChoice'>Multiple Choice</option>
            <option value='SingleChoice'>Single Choice</option>
            <option value='TrueFalse'>Wahr / Falsch</option>
          </select>
          <div class='right'></div>
        </div>
        <h3 id='question' onclick="clearField()" contenteditable='true' data-stack-id='<%= @stack.id %>'>Frage bearbeiten</h3>
      </div>
      <div class='action-buttons'>
        <button class='button circle white' onclick="showAnswerSide()">
          <%= render partial: 'shared/icons/turn' %>
        </button>
      </div>
    </div>

    <div class='card card-front orange invisible' id='notes-card'>
      <div>
        <h3>Notizen</h3>
        <p id='notes-text' contenteditable='true'>Notizen bearbeiten</p>
      </div>
      <button class='button circle white' onclick='flipCard()'>
        <%= render partial: 'shared/icons/back' %>
      </button>
    </div>

    <div class='card card-back orange answer' id='back'>
      <div>
        <p class='question'>Frage</p>
        <%# only for open answer %>
        <div class='answers open-answer' id='OpenAnswer'><h3 id='answer' contenteditable='true'>Antwort bearbeiten</h3></div>

        <%# only for multiple choice %>
        <div class='answers multiple-choice' id='MultipleChoice'>
          <div class='horizontal-input'>
            <input type='checkbox' id='mc-option1-correct' name='option1' value='1'>
            <label contenteditable='true' id='mc-option1' class='bold'>Antwort bearbeiten</label>
          </div>
          <div class='horizontal-input'>
            <input type='checkbox' id='mc-option2-correct' name='option2' value='2'>
            <label contenteditable='true' id='mc-option2' class='bold'>Antwort bearbeiten</label>
          </div>
          <div class='horizontal-input'>
            <input type='checkbox' id='mc-option3-correct' name='option3' value='3'>
            <label contenteditable='true' id='mc-option3' class='bold'>Antwort bearbeiten</label>
          </div>
          <div class='horizontal-input'>
            <input type='checkbox' id='mc-option4-correct' name='option4' value='4'>
            <label contenteditable='true' id='mc-option4' class='bold'>Antwort bearbeiten</label>
          </div>
          <div class='horizontal-input select-hint'>
            <%= render 'shared/icons/corner' %>
            <p>Richtige auswählen</p>
          </div>
        </div>

        <%# only for single choice %>
        <div class='answers single-choice' id='SingleChoice'>
          <div class='horizontal-input'>
            <input type='radio' id='option1' name='sc-correct' value='1'>
            <label contenteditable='true' id='sc-option1' class='bold'>Antwort bearbeiten</label>
          </div>
          <div class='horizontal-input'>
            <input type='radio' id='option2' name='sc-correct' value='2'>
            <label contenteditable='true' id='sc-option2' class='bold'>Antwort bearbeiten</label>
          </div>
          <div class='horizontal-input'>
            <input type='radio' id='option3' name='sc-correct' value='3'>
            <label contenteditable='true' id='sc-option3' class='bold'>Antwort bearbeiten</label>
          </div>
          <div class='horizontal-input'>
            <input type='radio' id='option4' name='sc-correct' value='4'>
            <label contenteditable='true' id='sc-option4' class='bold'>Antwort bearbeiten</label>
          </div>
          <div class='horizontal-input select-hint'>
            <%= render 'shared/icons/corner' %>
            <p>Richtiges auswählen</p>
          </div>
        </div>

        <%# only for true false %>
        <div class='answers true-false' id='TrueFalse'>
          <div class='horizontal-input'>
            <input type='radio' id='true' name='true-false' value='true'>
            <label for='true' class='bold'>Wahr</label>
          </div>
          <div class='horizontal-input'>
            <input type='radio' id='false' name='true-false' value='false'>
            <label for='false' class='bold'>Falsch</label>
          </div>
        </div>
      </div>

      <div class='action-buttons'>
        <button class='button circle white' id='notes-button-back' onclick='showNotes()'>
          <%= image_pack_tag 'bulb.png', alt: 'Notizen' %>
        </button>
        <button class='button circle white' onclick="createFlashcard()">
          <%= render partial: 'shared/icons/next' %>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  function clearField() {
    document.getElementById("question").textContent = '';
  }

  function createFlashcard() {
    const data = getFlashcardData();
    const question = document.getElementById('question');
    const stackId = question.dataset.stackId;

    fetch(`/stacks/${stackId}/flashcards`, {
      method: 'POST',
      body: JSON.stringify({ flashcard: data }),
      headers: new Headers({
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
      })
    })
    .then((res) => res.text())
    .then((html) => {
      const content = new DOMParser().parseFromString(html, 'text/html').body.firstChild;
      const backside = document.getElementById('back');
      backside.innerHTML = '';
      backside.appendChild(content);
    })
  }

  function getFlashcardData() {
    const select = document.getElementById('type-select');
    const type = select.selectedOptions[0].value;
    let answer = {};

    switch (type) {
      case 'OpenAnswer':
        answer = { answer: document.getElementById('answer').textContent };
        break;
      case 'MultipleChoice':
        answer = {
          option1: document.getElementById('mc-option1').textContent,
          option2: document.getElementById('mc-option2').textContent,
          option3: document.getElementById('mc-option3').textContent,
          option4: document.getElementById('mc-option4').textContent,
          option1_correct: document.getElementById('mc-option1-correct').checked,
          option2_correct: document.getElementById('mc-option2-correct').checked,
          option3_correct: document.getElementById('mc-option3-correct').checked,
          option4_correct: document.getElementById('mc-option4-correct').checked,
        }
        break;
      case 'SingleChoice':
        answer = {
          option1: document.getElementById('sc-option1').textContent,
          option2: document.getElementById('sc-option2').textContent,
          option3: document.getElementById('sc-option3').textContent,
          option4: document.getElementById('sc-option4').textContent,
          correct_option: parseInt(document.querySelector('input[name="sc-correct"]:checked').value),
        }
        break;
      case 'TrueFalse':
        answer = {
          correct: document.querySelector('input[name="true-false"]:checked').value === 'true',
        }
        break;
      default:
        break;
    }

    const questionText = question.textContent;
    const notes = document.getElementById('notes-text').textContent;

    return {
      question: questionText,
      notes: notes,
      type: type,
      ...answer
    }
  }

  function showAnswerSide() {
    const questionText = document.getElementById('question').textContent;
    const backsideQuestion = document.querySelector('p.question');
    backsideQuestion.textContent = questionText;
    const select = document.getElementById('type-select');
    const type = select.selectedOptions[0].value;

    const answers = document.querySelectorAll('div.answers');

    Array.from(answers).forEach(answerBlock => {
      if (type !== answerBlock.id) {
        answerBlock.classList.add('invisible');
      } else {
        answerBlock.classList.remove('invisible');
      }
    });

    document.getElementById('notes-card').classList.add('invisible');
    flipCard();
  }

  function showNotes() {
    document.querySelector('.card-front.question').classList.add('invisible');
    document.getElementById('notes-card').classList.remove('invisible');
    flipCard();
  }

  function flipCard() {
    document.querySelector('.card-wrapper').classList.toggle('flipped');
  }
</script>
